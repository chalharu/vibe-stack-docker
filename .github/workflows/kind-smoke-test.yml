name: Kubernetes smoke test (kind)

on:
  pull_request:
    types: [opened, synchronize, reopened]
  push:
    branches:
      - "001-vibe-kanban-kubernetes"
      - "main"

permissions:
  contents: read

concurrency:
  group: kind-smoke-${{ github.ref }}
  cancel-in-progress: true

jobs:
  kind-smoke:
    name: Kind smoke test
    runs-on: ubuntu-latest
    timeout-minutes: 20
    env:
      IMAGE: ghcr.io/${{ github.repository }}:test-${{ github.sha }}
    steps:
      - name: Checkout
        uses: actions/checkout@v5
        with:
          fetch-depth: 0
          
      - name: Change Docker Container Folder
        run: |
          sudo rm -rf /mnt/tmp/containerd || true
          sudo mkdir -p /mnt/tmp/containerd
          sudo rsync -aXS /var/lib/containerd/. /mnt/tmp/containerd/
          # sudo sed -i 's|/var/lib/containerd|/mnt/tmp/containerd|g' /etc/containerd/config.toml
          echo "root = /mnt/tmp/containerd" | sudo tee -a /etc/containerd/config.toml
          sudo systemctl restart containerd || sudo journalctl -xeu containerd.service
          sudo systemctl status containerd
          
      - name: Set up kind
        uses: engineerd/setup-kind@v0.6.2
        with:
          version: v0.24.0

      - name: Install kubectl
        uses: azure/setup-kubectl@776406bce94f63e41d621b960d78ee25c8b76ede # v4

      - name: Check Disk Space
        run: |
          docker system df
          echo "---------------"
          df -h
          echo "---------------"
          mount
          echo "---------------"
          kubectl describe nodes

      - name: Build Docker image
        run: |
          docker build -t "$IMAGE" .

      - name: Load image into kind
        run: |
          kind load docker-image "$IMAGE"

      - name: Prepare manifests for kind and apply
        run: |
          set -euxo pipefail
          python3 scripts/ci/prepare_manifests.py

          echo "--- applied manifest ---"
          sed -n '1,200p' k8s/vibe-kanban-deployment-applied.yaml || true
          kubectl apply -f k8s/vibe-kanban-deployment-applied.yaml
          kubectl get all -o wide || true

      - name: Wait for deployment to become ready
        run: |
          set -euxo pipefail
          if ! kubectl rollout status deployment/vibe-kanban --timeout=180s; then
            echo "Rollout failed - gathering debug info"
            kubectl describe deployment/vibe-kanban || true
            kubectl get pods -l app=vibe-kanban -o wide || true
            kubectl logs -l app=vibe-kanban --all-containers=true || true
            exit 1
          fi

      - name: In-cluster smoke test (curl /api/health)
        run: |
          set -euxo pipefail
          kubectl run test-curl --restart=Never --image=curlimages/curl:latest -- /bin/sh -c "for i in 1 2 3 4 5 6 7 8 9 10; do if curl -sSf http://vibe-kanban:8080/api/health; then echo 'health OK'; exit 0; else echo 'retrying...'; sleep 2; fi; done; echo 'health check failed'; exit 1"
          for i in 1 2 3 4 5 6 7 8 9 10; do
            phase=$(kubectl get pod test-curl -o jsonpath='{.status.phase}' || echo "")
            echo "pod phase: $phase"
            if [ "$phase" = "Succeeded" ] || [ "$phase" = "Failed" ]; then
              break
            fi
            sleep 2
          done
          kubectl logs pod/test-curl --tail=200 || true
          exit_code=$(kubectl get pod test-curl -o jsonpath='{.status.containerStatuses[0].state.terminated.exitCode}' 2>/dev/null || echo 1)
          kubectl delete pod test-curl --ignore-not-found
          if [ "$exit_code" = "0" ]; then
            echo "in-cluster health check passed"
          else
            echo "in-cluster health check failed (exit: $exit_code)"
            exit 1
          fi

      - name: Show final pod state
        run: |
          kubectl get pods -l app=vibe-kanban -o wide || true
